% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/acc2lin.R, R/lineage.R
\name{acc2Lineage}
\alias{acc2Lineage}
\title{acc2Lineage}
\usage{
acc2Lineage(
  accessions,
  assembly_path,
  lineagelookup_path,
  ipgout_path = NULL,
  plan = "multicore"
)

acc2Lineage(
  accessions,
  assembly_path,
  lineagelookup_path,
  ipgout_path = NULL,
  plan = "multicore"
)
}
\arguments{
\item{accessions}{Character vector of protein accessions}

\item{assembly_path}{String of the path to the assembly_summary path
This file can be generated using the "downloadAssemblySummary()" function}

\item{lineagelookup_path}{String of the path to the lineage lookup file
(taxid to lineage mapping). This file can be generated using the}

\item{ipgout_path}{Path to write the results of the efetch run of the accessions
on the ipg database. If NULL, the file will not be written. Defaults to NULL}

\item{plan}{Character. Specifies the execution plan for parallel processing.
Default is "multicore".}
}
\value{
A \code{data.table} that contains the lineage information, mapping protein
accessions to their tax IDs and lineages.

A dataframe containing lineage information mapped to the given protein
accessions. The dataframe includes relevant columns such as TaxID, GCA_ID,
Protein, Protein Name, Species, and Lineage.
}
\description{
This function combines 'efetchIPG()'
and 'IPG2Lineage()' to map a set
of protein accessions to their assembly (GCA_ID), tax ID, and lineage.

Function to map protein accession numbers to lineage

This function combines 'efetchIPG()' and 'IPG2Lineage()' to map a set
of protein accessions to their assembly (GCA_ID), tax ID, and lineage.
}
\examples{
\dontrun{
acc2Lineage()
}
\dontrun{
lineage_data <- acc2Lineage(
  accessions = c("P12345", "Q67890"),
  assembly_path = "path/to/assembly_summary.txt",
  lineagelookup_path = "path/to/lineage_lookup.tsv",
  ipgout_path = "path/to/output.txt"
)
}
}
\author{
Samuel Chen, Janani Ravi
}
